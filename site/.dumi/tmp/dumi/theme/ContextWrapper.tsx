// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import React, { useState, useEffect, useRef } from 'react';
import { useOutlet, history } from 'dumi';
import { warning } from '/Users/howie/Documents/project/antd-flutter/site/node_modules/.pnpm/rc-util@5.44.4_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/rc-util';
import { SiteContext, type ISiteContext } from '/Users/howie/Documents/project/antd-flutter/site/node_modules/.pnpm/dumi@2.4.18_@babel+core@7.26.10_@swc+helpers@0.5.1_@types+node@20.5.1_@types+react@19.1_32bd86257c5512f606a0afe869fca965/node_modules/dumi/dist/client/theme-api/context.js';
import { components } from '../meta/atoms';
import { locales } from '../locales/config';



const entryExports = {
};

// Static content
const pkg = {"name":"antd_flutter_mobile","description":"A static site based on dumi","version":"0.0.1","license":"MIT","authors":["howie"]};
const historyType = "browser";
const hostname = undefined;
const themeConfig = {"footer":false,"prefersColor":{"default":"light","switch":true},"nprogress":true,"lastUpdated":true,"name":"Antd Flutter","title":"Antd Flutter","description":"Ant Design For Flutter","github":"https://github.com/OpenSourceNoCode/antd-flutter","nav":[{"title":"指南","link":"/guide"},{"title":"组件","link":"/components/antd-box"}],"bannerConfig":{"showBanner":false},"sidebarGroupModePath":true,"docVersions":{"5.0.0 Alpha":"https://github.com/OpenSourceNoCode/antd-flutter"},"rtl":false,"actions":[{"type":"primary","text":"开始使用","link":"/guide"},{"type":"default","text":"组件","link":"/components/antd-box"}],"features":[{"title":"开箱即用","details":"零依赖，安装即完成"},{"title":"样式系统","details":"创新式的样式系统，不绑定任何特定UI实现，灵活强大，允许你定制看到的每一个元素"},{"title":"零依赖","details":"自包含解决方案，从弹窗到滚动交互，一个组件库满足所有需求。"},{"title":"高性能","details":"深度优化滚动与底层实现，确保流畅体验与卓越性能表现。"},{"title":"轻量级","details":"包含icon后整包仅218K"},{"title":"暗黑模式","details":"基于 Antd Token 系统，不仅支持暗黑主题，更实现了完整设计体系的无缝贯通。"}],"resolve":{"codeBlockMode":"active"},"extraBabelPlugins":[["prismjs",{"languages":["dart"],"plugins":["line-numbers","show-language"],"theme":"okaidia","css":true}]]};
const _2_level_nav_available = true;

export default function DumiContextWrapper() {
  const outlet = useOutlet();
  const [loading, setLoading] = useState(false);
  const prev = useRef(history.location.pathname);

  useEffect(() => {
    return history.listen((next) => {
      if (next.location.pathname !== prev.current) {
        prev.current = next.location.pathname;

        // scroll to top when route changed
        document.documentElement.scrollTo(0, 0);
      }
    });
  }, []);

  const context: ISiteContext = React.useMemo(() => {
    const ctx = {
      pkg,
      historyType,
      entryExports,
      demos: null,
      components,
      locales,
      loading,
      setLoading,
      hostname,
      themeConfig,
      _2_level_nav_available,
    };

    // Proxy do not warning since `Object.keys` will get nothing to loop
    Object.defineProperty(ctx, 'demos', {
      get: () => {
        warning(false, '`demos` return empty in latest version, please use `useDemo` instead.');
        return {};
      },
    });

    return ctx;
  }, [
    pkg,
    historyType,
    entryExports,
    components,
    locales,
    loading,
    setLoading,
    hostname,
    themeConfig,
    _2_level_nav_available,
  ]);

  return (
    <SiteContext.Provider value={context}>
      {outlet}
    </SiteContext.Provider>
  );
}
